/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package bibliotecaAdministrador.Prestamo;

import bibliotecaAdministrador.ConexionBD;
import bibliotecaAdministrador.PaginaPrincipalAdministrador;
import com.formdev.flatlaf.themes.FlatMacLightLaf;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.CallableStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Types;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author g
 */
public class Prestamos extends javax.swing.JFrame {

    /**
     * Creates new form Prestamos
     */
    ConexionBD conecta;
    ResultSet res;
    public Prestamos() {
        initComponents();
        tablaP();
        txtIdPrestamo.setVisible(false);
        this.setLocationRelativeTo(null);
        this.setTitle("BIBLIOTECA");
        this.setIconImage(getIconImage());
    }

    @Override
    public Image getIconImage(){
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("img/library.png"));
        return retValue;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelP = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnPrestar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtPrestamos = new javax.swing.JTable();
        txtIdPrestamo = new javax.swing.JTextField();
        btnBuscarPrestamo = new javax.swing.JButton();
        txtUsuario = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("PRESTAMOS DE LIBROS");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("No. Control Usuario");

        btnPrestar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnPrestar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/nuevo.png"))); // NOI18N
        btnPrestar.setText("NUEVO");
        btnPrestar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrestarActionPerformed(evt);
            }
        });

        btnBorrar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/borrar.png"))); // NOI18N
        btnBorrar.setText("BORRAR");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        btnRegresar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/regresar.png"))); // NOI18N
        btnRegresar.setText("REGRESAR");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        jtPrestamos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8"
            }
        ));
        jtPrestamos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtPrestamosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtPrestamos);

        btnBuscarPrestamo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnBuscarPrestamo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/search.png"))); // NOI18N
        btnBuscarPrestamo.setText("BUSCAR");
        btnBuscarPrestamo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPrestamoActionPerformed(evt);
            }
        });

        txtUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUsuarioKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout panelPLayout = new javax.swing.GroupLayout(panelP);
        panelP.setLayout(panelPLayout);
        panelPLayout.setHorizontalGroup(
            panelPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPLayout.createSequentialGroup()
                .addContainerGap(378, Short.MAX_VALUE)
                .addGroup(panelPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelPLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(btnBuscarPrestamo, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelPLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(157, 157, 157)
                        .addComponent(txtIdPrestamo, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(217, 217, 217))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelPLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnPrestar, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator2)
                    .addComponent(jSeparator1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(18, 18, 18))
        );
        panelPLayout.setVerticalGroup(
            panelPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panelPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIdPrestamo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(panelPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarPrestamo))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(panelPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegresar)
                    .addComponent(btnBorrar)
                    .addComponent(btnPrestar))
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtUsuarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUsuarioKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtUsuarioKeyTyped

    private void btnBuscarPrestamoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPrestamoActionPerformed
        // TODO add your handling code here:
        if(!txtUsuario.getText().equals("")){
            DefaultTableModel modelo = new DefaultTableModel();
            conecta = new ConexionBD();
            jtPrestamos.setModel(modelo);
            //String sql="SELECT p.id_prestamo, CONCAT(u.nombre,' ',u.ap,' ',u.am) AS Usuario, l.titulo as Libro, e.descripcion as Estado, p.fecha_prestamo, p.fecha_estimada, p.multa FROM prestamos p INNER JOIN\n" +
            //"usuarios u on p.id_usuario=u.id_usuario INNER JOIN libros l on p.id_libro=l.id_libro INNER JOIN estados e on p.id_estado=e.id_estado WHERE id_usuario='"+Integer.parseInt(txtUsuario.getText())+"' GROUP BY p.id_prestamo;";
            String sql="SELECT p.id_prestamo, CONCAT(u.nombre,' ',u.ap,' ',u.am) AS Usuario, l.titulo as Libro, c.codigo_copia, e.descripcion as Estado, p.fecha_prestamo, p.fecha_estimada, p.multa FROM prestamos p INNER JOIN usuarios u on p.id_usuario=u.id_usuario INNER JOIN copias c on p.id_copia=c.id_copia INNER JOIN libros l ON c.id_libro=l.id_libro INNER JOIN estados e on p.id_estado=e.id_estado WHERE p.id_usuario ="+ Integer.parseInt(txtUsuario.getText()) +" GROUP BY p.id_prestamo;";
            res = conecta.consultar(sql);
            try {
                ResultSetMetaData rsMd = (ResultSetMetaData) res.getMetaData();
                int cantidadColumnas = rsMd.getColumnCount();

                modelo.addColumn("ID");
                modelo.addColumn("Usuario");
                modelo.addColumn("Libro");
                modelo.addColumn("codigo_copia");
                modelo.addColumn("Estado");
                modelo.addColumn("Fecha Prestamo");
                modelo.addColumn("Fecha Estimada Entrega");
                modelo.addColumn("Multa");
                int []anchos = {20, 150,100,100,50,50,80,20};
                for (int i = 0; i < jtPrestamos.getColumnCount(); i++) {
                    jtPrestamos.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
                }

                while (res.next()) {
                    Object[] filas = new Object[cantidadColumnas];
                    for (int i = 0; i < cantidadColumnas; i++) {
                        filas[i] = res.getObject(i + 1);
                    }
                    modelo.addRow(filas);
                }
            } catch (Exception e) {
            }finally{

            }
        }

    }//GEN-LAST:event_btnBuscarPrestamoActionPerformed

    private void jtPrestamosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtPrestamosMouseClicked
        // TODO add your handling code here:
        conecta = new ConexionBD();
        ResultSet res;
        try{
            int Fila = jtPrestamos.getSelectedRow();
            String id = jtPrestamos.getValueAt(Fila, 0).toString();
            String sqlConsulta = "SELECT  p.id_prestamo, CONCAT(u.nombre,' ',u.ap,' ',u.am) as usuario, u.id_usuario, u.telefono, l.id_libro, l.titulo, c.codigo_copia FROM prestamos p inner join usuarios u on p.id_usuario=u.id_usuario\n" +
            "INNER JOIN copias c on p.id_copia=c.id_copia INNER JOIN libros l ON c.id_libro = l.id_libro where id_prestamo="+Integer.parseInt(id);
            res = conecta.consultar(sqlConsulta);
            while(res.next()){
                txtIdPrestamo.setText(res.getString("id_prestamo"));
                txtUsuario.setText(res.getString("id_usuario"));
            }
        }catch (Exception e){
            System.out.println("error al cargar datos de la tabla a los campos en los prestamos: "+e.getMessage());

        }finally{
            conecta.cerrar();
        }
    }//GEN-LAST:event_jtPrestamosMouseClicked

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        // TODO add your handling code here:
        PaginaPrincipalAdministrador prin = new PaginaPrincipalAdministrador();
        prin.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        // TODO add your handling code here:
        if(!txtIdPrestamo.getText().equals("") && !txtUsuario.getText().equals("")){
            conecta= new ConexionBD();
            try{
                String sqlDelete="DELETE FROM prestamos where id_prestamo="+Integer.parseInt(txtIdPrestamo.getText());
                conecta.operacionesAMB(sqlDelete);
                JOptionPane.showMessageDialog(null, "Registro eliminado exitosamente");
                txtUsuario.setText("");
                txtIdPrestamo.setText("");
            }catch(Exception e){
                JOptionPane.showMessageDialog(null,"Error al intentar eliminar el registro");
                System.out.println("error al eliminar registro de prestamos: "+e.getMessage());
            }finally{
                conecta.cerrar();
            }
            panelP.remove(jtPrestamos);
            tablaP();
            repaint();
        }else{
            JOptionPane.showMessageDialog(null, "Por favor selecciona un registro de la tabla");
        }
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void btnPrestarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrestarActionPerformed
        // TODO add your handling code here:
        //---------------------------
        /*if(!txtUsuario.getText().equals("") && !txtLibro.getText().equals("") && cmbCopias.getSelectedIndex() > 0){
            ResultSet res;
            String idC="",idE="",idL="", desc="";
            conecta = new ConexionBD();
            //String sql="SELECT u.id_usuario, c.id_copia, e.id_estado, (SELECT descripcion FROM estados e INNER JOIN copias c ON c.id_estado=e.id_estado where c.codigo_copia='"+cmbCopias.getSelectedItem().toString()+"') as descripcion from usuarios u, copias c, estados e where u.id_usuario='"+Integer.parseInt(txtUsuario.getText())+"' and c.id_libro='"+Integer.parseInt(txtLibro.getText())+"' and e.descripcion='Activo'";
            //String sql="SELECT id_copia, id_libro, (SELECT id_estado FROM estados where descripcion='Activo') as id_estado,(SELECT e.descripcion FROM estados e INNER JOIN copias c ON c.id_estado=e.id_estado WHERE c.codigo_copia='"+cmbCopias.getSelectedItem().toString()+"') AS descripcion FROM copias WHERE codigo_copia='"+cmbCopias.getSelectedItem().toString()+"'";
            String sql = "SELECT p.id_copia, p.id_libro, " +
            " (SELECT id_estado FROM estados WHERE descripcion='Activo') AS id_estado, " +
            " (SELECT e.descripcion FROM estados e " +
            " INNER JOIN copias p ON p.id_estado=e.id_estado AND p.codigo_copia='" + cmbCopias.getSelectedItem().toString() + "') AS descripcion " +
            " FROM copias p WHERE p.codigo_copia='" + cmbCopias.getSelectedItem().toString() + "'";

            System.out.println(sql);
            res = conecta.consultar(sql);
            try{
                while(res.next()){
                    idC=res.getString("id_copia");
                    idL=res.getString("id_libro");
                    idE=res.getString("id_estado");
                    desc=res.getString("descripcion");
                }
                System.out.println(idC+" "+idE+" "+idL+" "+desc);
            }catch(Exception e){
                System.out.println("Error al obtener los ids para guardar prestamo: "+e.getMessage());
            }
            if(!desc.equals("Solo consulta")){*/
                //String sqlAlta="INSERT INTO prestamos VALUES(null,"+Integer.parseInt(idU)+","+Integer.parseInt(idL)+","+Integer.parseInt(idE)+",now(), now(), 0)";
                //System.out.println(sqlAlta);
                //------------------------------
                /*try{
                    realizarPrestamo(Integer.parseInt(txtUsuario.getText()),Integer.parseInt(idC), Integer.parseInt(idL), Integer.parseInt(idE));
                    txtLibro.setText("");
                    txtUsuario.setText("");
                    txtNom.setText("");
                    txtTel.setText("");
                    txtTitulo.setText("");
                    cmbCopias.setSelectedIndex(0);
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Error al realizar registro");
                    System.out.println("Error al realizar registro prestamo llamando al procedure: "+e.getMessage());
                }finally{
                    conecta.cerrar();
                }
                panelP.remove(jtPrestamos);
                tablaP();
                repaint();
            }else{
                JOptionPane.showMessageDialog(null, "Lo sentimos el libro que quieres solo es de consulta");
                txtLibro.setText("");
                txtUsuario.setText("");
            }
        }else{
            JOptionPane.showMessageDialog(null, "Por Favor llena los campos y verifica que exista el usuario y el libro");
        }*/
        /*String sqlAlta="INSERT INTO prestamos VALUES(null,"+Integer.parseInt(idU)+","+Integer.parseInt(idL)+","+Integer.parseInt(idE)+",now(), now(), 0)";
        System.out.println(sqlAlta);
        try{
            conecta.operacionesAMB(sqlAlta);
            JOptionPane.showMessageDialog(null, "Registro Exitoso");
            txtLibro.setText("");
            txtUsuario.setText("");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error al realizar registro");
            System.out.println("Error al realizar registro prestamo: "+e.getMessage());
        }finally{
            conecta.cerrar();
        }
        }else{
            JOptionPane.showMessageDialog(null, "Por Favor llena los campos y verifica que exista el usuario y el libro");
        }
        panelP.remove(jtPrestamos);
        tablaP();
        repaint();*/
        Guardar g = new Guardar();
        g.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnPrestarActionPerformed

    void tablaP(){
        try{
            DefaultTableModel modelo = new DefaultTableModel();
            conecta = new ConexionBD();
            jtPrestamos.setModel(modelo);
            String sql="SELECT p.id_prestamo, CONCAT(u.nombre,' ',u.ap,' ',u.am) AS Usuario, l.titulo as Libro, c.codigo_copia, e.descripcion as Estado, p.fecha_prestamo, p.fecha_estimada, p.multa FROM prestamos p INNER JOIN usuarios u on p.id_usuario=u.id_usuario INNER JOIN copias c on p.id_copia=c.id_copia INNER JOIN libros l ON c.id_libro=l.id_libro INNER JOIN estados e on p.id_estado=e.id_estado GROUP BY p.id_prestamo;";
            res = conecta.consultar(sql);
            ResultSetMetaData rsMd = (ResultSetMetaData) res.getMetaData();
            int cantidadColumnas = rsMd.getColumnCount();
            modelo.addColumn("ID");
            modelo.addColumn("Usuario");
            modelo.addColumn("Libro");
            modelo.addColumn("codigo_copia");
            modelo.addColumn("Estado");
            modelo.addColumn("Fecha Prestamo");
            modelo.addColumn("Fecha Estimada Entrega");
            modelo.addColumn("Multa");
            int []anchos = {20, 150,100,100,50,50,80,20};
            for(int i=0;i<jtPrestamos.getColumnCount();i++){
                jtPrestamos.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
            }
            while (res.next()) {
                Object[] filas = new Object[cantidadColumnas];
                for (int i = 0; i < cantidadColumnas; i++) {
                    filas[i] = res.getObject(i + 1);
                }
                modelo.addRow(filas);
            }
        }catch(Exception e){
            System.out.println("Error al mostrar datos de la tabla de prestamos: "+e.getMessage());
        }finally{
            conecta.cerrar();
        }
    }
    
    public void realizarPrestamo(int idUsuario, int idCopia, int idLibro, int idEstado) {
    try {
        conecta = new ConexionBD();
        // Preparar la llamada al procedimiento almacenado
        String procedimiento = "{call RealizarPrestamo(?, ?, ?, ?, ?)}";
        CallableStatement cs = conecta.conn.prepareCall(procedimiento);

        // Establecer los parámetros del procedimiento almacenado
        cs.setInt(1, idUsuario);
        cs.setInt(2, idCopia);
        cs.setInt(3, idLibro);
        cs.setInt(4, idEstado);
        cs.registerOutParameter(5, Types.VARCHAR);

        // Ejecutar el procedimiento almacenado
        cs.execute();
        // Obtener el mensaje de salida del procedimiento
        String mensaje = cs.getString(5);
        JOptionPane.showMessageDialog(null, mensaje);

        // Cerrar el CallableStatement
        cs.close();
        //txtLibro.setText("");
        //txtUsuario.setText("");
        //JOptionPane.showMessageDialog(null, "Registro Exitoso");
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al realizar el registro del préstamo");
        System.out.println("Error al realizar registro prestamo: " + e.getMessage());
    }catch(Exception e){
        JOptionPane.showMessageDialog(null, "Error al realizar prestamo. ");
    }
    finally{
        conecta.cerrar();
    }
}

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Prestamos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Prestamos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Prestamos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Prestamos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }*/
        
        try {
            //UIManager.setLookAndFeel( new FlatLightLaf() );
            FlatMacLightLaf.setup();
        } catch( Exception ex ) {
            System.err.println( "Failed to initialize LaF" );
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Prestamos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnBuscarPrestamo;
    private javax.swing.JButton btnPrestar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jtPrestamos;
    private javax.swing.JPanel panelP;
    private javax.swing.JTextField txtIdPrestamo;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
