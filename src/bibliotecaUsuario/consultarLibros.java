/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package bibliotecaUsuario;

import bibliotecaAdministrador.ConexionBD;
import com.formdev.flatlaf.themes.FlatMacLightLaf;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author g
 */
public class consultarLibros extends javax.swing.JFrame {

    /**
     * Creates new form consultarLibros
     */
    ConexionBD conecta;
    ResultSet res;
    String nombre;
    String id;
    void setNombre(String nombre, String id){
        this.nombre=nombre;
        this.id=id;
        lblNombre.setText(nombre);
        lblid.setText(id);
    }
    public consultarLibros() {
        initComponents();
        tablaL();
        lblid.setVisible(false);
        lblNombre.setVisible(false);
        this.setTitle("BIBLIOTECA");
        this.setIconImage(getIconImage());
        this.setLocationRelativeTo(null);
    }

    @Override
    public Image getIconImage(){
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("img/library.png"));
        return retValue;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtLibro = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtLibro = new javax.swing.JTable();
        lblNombre = new javax.swing.JLabel();
        lblid = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("LIBROS DISPONIBLES");

        btnBuscar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/search.png"))); // NOI18N
        btnBuscar.setText("BUSCAR");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnRegresar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/regresar.png"))); // NOI18N
        btnRegresar.setText("REGRESAR");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Titulo del Libro");

        jtLibro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        jScrollPane1.setViewportView(jtLibro);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(206, 206, 206)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lblNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(111, 111, 111)
                        .addComponent(lblid, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(26, 26, 26)
                        .addComponent(txtLibro, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(148, 148, 148))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnRegresar)
                        .addGap(31, 31, 31))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(314, 314, 314))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblid, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscar)
                    .addComponent(jLabel2)
                    .addComponent(txtLibro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnRegresar)
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        if(!txtLibro.getText().equals("")){
            /*ResultSet res;
            try{
            DefaultTableModel modelo = new DefaultTableModel();
            conecta = new ConexionBD();
            jtLibro.setModel(modelo);
            String sql="SELECT\n" +
            "	libros.id_libro as ID,\n" +
            "    libros.titulo AS Titulo,\n" +
            "    generos.descripcion AS Genero,\n" +
            "    estados.descripcion AS Estado,\n" +
            "    CONCAT(autores.nombre,' ',autores.ap,' ',autores.am) AS Nombre_Autor,\n" +
            "    libros.copias AS N_Copias\n" +
            "FROM\n" +
            "    libros\n" +
            "JOIN generos ON libros.id_genero = generos.id_genero\n" +
            "JOIN estados ON libros.id_estado = estados.id_estado\n" +
            "JOIN autores ON libros.id_autor = autores.id_autor\n" +
            "where libros.titulo='"+txtLibro.getText()+"'"+
            "GROUP BY libros.id_libro;";
            res = conecta.consultar(sql);
            ResultSetMetaData rsMd = (ResultSetMetaData) res.getMetaData();
            int cantidadColumnas = rsMd.getColumnCount();
            modelo.addColumn("ID");
            modelo.addColumn("Titulo");
            modelo.addColumn("Genero");
            modelo.addColumn("Estado");
            modelo.addColumn("Autor");
            modelo.addColumn("N_Copias");
            
            int []anchos = {20, 150,50,50,150,50};
            for(int i=0;i<jtLibro.getColumnCount();i++){
                jtLibro.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
            }
            while (res.next()) {
                Object[] filas = new Object[cantidadColumnas];
                for (int i = 0; i < cantidadColumnas; i++) {
                    filas[i] = res.getObject(i + 1);
                }
                modelo.addRow(filas);
            }
        }catch(Exception e){
            System.out.println("Error al mostrar datos de la tabla de libros: "+e.getMessage());
        }finally{
            conecta.cerrar();
        }*/
            try{
            DefaultTableModel modelo = new DefaultTableModel();
            conecta = new ConexionBD();
            jtLibro.setModel(modelo);
            //String sql="SELECT l.id_libro, l.titulo, g.descripcion FROM libros l INNER JOIN generos g ON l.id_genero=g.id_genero WHERE l.titulo='"+txtTitulo.getText()+"'";
            String sql="SELECT\n" +
            "    l.id_libro,\n" +
            "    l.titulo,\n" +
            "    g.descripcion,\n" +
            "    (\n" +
            "        SELECT CONCAT(a.nombre,' ',a.ap,' ',a.am)\n" +
            "        FROM autores a\n" +
            "        INNER JOIN asigna_autores aa ON aa.id_autor = a.id_autor\n" +
            "        WHERE aa.id_libro = l.id_libro\n" +
            "        LIMIT 1\n" +
            "    ) AS autor,\n" +
            "    (\n" +
            "        SELECT COUNT(c.codigo_copia)\n" +
            "        FROM copias c\n" +
            "        WHERE c.id_libro = l.id_libro\n" +
            "    ) AS copias\n" +
            "FROM\n" +
            "    libros l\n" +
            "INNER JOIN generos g ON l.id_genero = g.id_genero\n" +
            "WHERE l.titulo='"+txtLibro.getText()+"'";
            res = conecta.consultar(sql);
            ResultSetMetaData rsMd = (ResultSetMetaData) res.getMetaData();
            int cantidadColumnas = rsMd.getColumnCount();
            modelo.addColumn("ID");
            modelo.addColumn("Titulo");
            modelo.addColumn("Genero");
            modelo.addColumn("Autor Principal");
            modelo.addColumn("No. Copias Totales");
            
            int []anchos = {20, 220,80,150,150};
            for(int i=0;i<jtLibro.getColumnCount();i++){
                jtLibro.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
            }
            while (res.next()) {
                Object[] filas = new Object[cantidadColumnas];
                for (int i = 0; i < cantidadColumnas; i++) {
                    filas[i] = res.getObject(i + 1);
                }
                modelo.addRow(filas);
            }
        }catch(SQLException ex){
            System.out.println("error sql tabla libros: "+ex.getMessage());
        }
        catch(Exception e){
            System.out.println("Error al mostrar datos de la tabla de libros: "+e.getMessage());
        }
        finally{
            conecta.cerrar();
        }
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        // TODO add your handling code here:
        PaginaPrincipalUsuario prinU = new PaginaPrincipalUsuario();
        prinU.setNombre(nombre, id);
        prinU.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnRegresarActionPerformed

    void tablaL(){
        try{
            DefaultTableModel modelo = new DefaultTableModel();
            conecta = new ConexionBD();
            jtLibro.setModel(modelo);
            //String sql="SELECT l.id_libro, l.titulo, g.descripcion FROM libros l INNER JOIN generos g ON l.id_genero=g.id_genero ORDER BY l.id_libro;";
            String sql="SELECT\n" +
            "    l.id_libro,\n" +
            "    l.titulo,\n" +
            "    g.descripcion,\n" +
            "    (\n" +
            "        SELECT CONCAT(a.nombre,' ',a.ap,' ',a.am)\n" +
            "        FROM autores a\n" +
            "        INNER JOIN asigna_autores aa ON aa.id_autor = a.id_autor\n" +
            "        WHERE aa.id_libro = l.id_libro\n" +
            "        LIMIT 1\n" +
            "    ) AS autor,\n" +
            "    (\n" +
            "        SELECT COUNT(c.codigo_copia)\n" +
            "        FROM copias c\n" +
            "        WHERE c.id_libro = l.id_libro\n" +
            "    ) AS copias\n" +
            "FROM\n" +
            "    libros l\n" +
            "INNER JOIN generos g ON l.id_genero = g.id_genero\n" +
            "ORDER BY\n" +
            "    l.id_libro;";
            res = conecta.consultar(sql);
            ResultSetMetaData rsMd = (ResultSetMetaData) res.getMetaData();
            int cantidadColumnas = rsMd.getColumnCount();
            modelo.addColumn("ID");
            modelo.addColumn("Titulo");
            modelo.addColumn("Genero");
            modelo.addColumn("Autor Principal");
            modelo.addColumn("No. Copias Totales");
            
            int []anchos = {20, 220,80,150,150};
            for(int i=0;i<jtLibro.getColumnCount();i++){
                jtLibro.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
            }
            while (res.next()) {
                Object[] filas = new Object[cantidadColumnas];
                for (int i = 0; i < cantidadColumnas; i++) {
                    filas[i] = res.getObject(i + 1);
                }
                modelo.addRow(filas);
            }
        }catch(SQLException ex){
            System.out.println("error sql tabla libros: "+ex.getMessage());
        }
        catch(Exception e){
            System.out.println("Error al mostrar datos de la tabla de libros: "+e.getMessage());
        }
        finally{
            conecta.cerrar();
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(consultarLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(consultarLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(consultarLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(consultarLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }*/
        try {
            //UIManager.setLookAndFeel( new FlatLightLaf() );
            FlatMacLightLaf.setup();
        } catch( Exception ex ) {
            System.err.println( "Failed to initialize LaF" );
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new consultarLibros().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtLibro;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblid;
    private javax.swing.JTextField txtLibro;
    // End of variables declaration//GEN-END:variables
}
